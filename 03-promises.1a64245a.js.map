{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA4BA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,aAAY,WACNN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,YAEpBA,OApCM,CACXQ,KAAMC,SAASC,cAAc,SAC7BV,MAAOS,SAASC,cAAc,gBAC9BC,UAAWF,SAASC,cAAc,eAClCE,OAAQH,SAASC,cAAc,mBAI5BF,KAAKK,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAIC,iBAIJ,IAHA,IAAMC,EAAQC,OAAOH,EAAII,OAAOlB,MAAMmB,OAChCC,EAAOH,OAAOH,EAAII,OAAOE,KAAKD,OAC9BP,EAASK,OAAOH,EAAII,OAAON,OAAOO,OAC/BE,EAAI,EAAGA,GAAKT,EAAQS,GAAK,EAAG,CAEnCvB,EAAcuB,EADFL,EAAQI,GAAQC,EAAI,IAE7BC,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjB,OAAOJ,EAAA4B,OAAOC,QAAQ,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,UAErE2B,OAAM,SAAAJ,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClB,OAAOJ,EAAA4B,OAAOI,QAAQ,sBAAqCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,c","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=delay]'),\n  delayStep: document.querySelector('[name=step]'),\n  amount: document.querySelector('[name=amount]'),\n};\n\n///////////////////////////////////////////////////////////////////////\nrefs.form.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(evt) {\n  evt.preventDefault();\n  const delay = Number(evt.target.delay.value);\n  const step = Number(evt.target.step.value);\n  const amount = Number(evt.target.amount.value);\n  for (let i = 1; i <= amount; i += 1) {\n    let total = delay + step * (i - 1);\n    createPromise(i, total)\n      .then(({ position, delay }) => {\n        return Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        return Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setInterval(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setInterval","form","document","querySelector","delayStep","amount","addEventListener","evt","preventDefault","delay1","Number","target","value","step","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.1a64245a.js.map"}